services:
  # Monitoring services
  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - prometheus-storage:/prometheus
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml

  statsd:
    image: prom/statsd-exporter
    ports:
      - '9102:9102'
      - '9125:9125'
      - '9125:9125/udp'

  grafana:
    image: grafana/grafana-oss:11.0.0
    ports:
      - '3000:3000'
    # volumes:
    #   - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

  # Spark clusters
  spark-master:
    hostname: spark-master
    build:
      context: ./spark-docker
    ports:
      - '8080:8080'
      - '7077:7077'
      - '4040:4040'
    volumes:
      - ./sparkapp:/opt/spark/work-dir/app
      - ./config/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
    env_file:
      - ./config/spark.env
    command:
      - /opt/spark/sbin/start-master.sh

  spark-worker:
    hostname: spark-worker
    build:
      context: ./spark-docker
    volumes:
      - ./config/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
    env_file:
      - ./config/spark.env
    command:
      - /opt/spark/sbin/start-worker.sh
      - spark://spark-master:7077
    depends_on:
      - spark-master
    deploy:
      mode: replicated
      replicas: 5

  # # Kafka (for Spark streaming apps)
  # kafka:
  #   image: 'bitnami/kafka:latest'
  #   ports:
  #     - '9092:9092'
  #   environment:
  #     - KAFKA_CFG_NODE_ID=0
  #     - KAFKA_CFG_PROCESS_ROLES=controller,broker
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #   volumes:
  #     - kafka-storage:/bitnami/kafka

  # netcat:
  #   image: subfuzion/netcat
  #   ports:
  #     - '9999:9999'
  #   command:
  #     - -l
  #     - -k
  #     - '9999'

volumes:
  prometheus-storage:
  grafana-storage:
  # kafka-storage:
